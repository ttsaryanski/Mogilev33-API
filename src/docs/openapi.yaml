openapi: 3.0.0
info:
    title: Mogilev33 REST API
    version: 1.0.0

servers:
    - url: http://localhost:3000/api

paths:
    /protocols:
        get:
            summary: Gets all protocols
            tags: [Protocols]
            responses:
                200:
                    description: Ok - Successfully retrieved protocols
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/GetAllProtocolsResponse"
                500:
                    description: Internal Server Error - Server error
                    content:
                        application/json:
                            example:
                                message: "Internal server error..."
        post:
            summary: Creates a new protocol
            tags: [Protocols]
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/CreateProtocolRequest"
            responses:
                201:
                    description: Created - protocol successfully created
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/SimpleProtocol"
                400:
                    description: Bad Request - invalid data
                    content:
                        application/json:
                            examples:
                                invalidTitle:
                                    summary: Invalid title
                                    value:
                                        message: "Protocol title should be at least 3 characters long!"
                                invalidDate:
                                    summary: Invalid date
                                    value:
                                        message: "Invalid date format. Expected YYYY/MM/DD (e.g. 2025/03/28)!"
                                invalidFileUrl:
                                    summary: Invalid fileUrl
                                    value:
                                        message: "Invalid file URL!"
                500:
                    description: Internal Server Error - server error
                    content:
                        application/json:
                            example:
                                message: "Internal server error..."
    /protocols/{protocolId}:
        get:
            summary: Gets a protocol by ID
            tags: [Protocols]
            parameters:
                - in: path
                  name: protocolId
                  required: true
                  schema:
                      type: string
                  description: ID of the note (valid ObjectId - 24 characters)
            responses:
                200:
                    description: Ok - Successfully retrieved protocol
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/SimpleProtocol"
                400:
                    description: Bad Request - invalid ID
                    content:
                        application/json:
                            example:
                                message: "Id must be a valid MongooseDB ObjectId!"
                404:
                    description: Not Found - protocol does not exist
                    content:
                        application/json:
                            example:
                                message: "Protocol not found!"
                500:
                    description: Internal Server Error - server error
                    content:
                        application/json:
                            example:
                                message: "Internal server error..."
        put:
            summary: Updates a protocol by ID
            tags: [Protocols]
            parameters:
                - in: path
                  name: protocolId
                  required: true
                  schema:
                      type: string
                  description: ID of the note (valid ObjectId - 24 characters)
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/EditProtocolRequest"
            responses:
                200:
                    description: Ok - protocol successfully updated
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/SimpleProtocol"
                400:
                    description: Bad Request - invalid data
                    content:
                        application/json:
                            examples:
                                invalidId:
                                    summary: Invalid ID
                                    value:
                                        message: "Id must be a valid MongooseDB ObjectId!"
                                invalidTitle:
                                    summary: Invalid title
                                    value:
                                        message: "Protocol title should be at least 3 characters long!"
                                invalidDate:
                                    summary: Invalid date
                                    value:
                                        message: "Invalid date format. Expected YYYY/MM/DD (e.g. 2025/03/28)!"
                                invalidFileUrl:
                                    summary: Invalid fileUrl
                                    value:
                                        message: "Invalid file URL!"
                404:
                    description: Not Found - protocol does not exist
                    content:
                        application/json:
                            example:
                                message: "Protocol not found!"
                500:
                    description: Internal Server Error - server error
                    content:
                        application/json:
                            example:
                                message: "Internal server error..."
        delete:
            summary: Deletes a protocol by ID
            tags: [Protocols]
            parameters:
                - in: path
                  name: protocolId
                  required: true
                  schema:
                      type: string
                  description: ID of the note (valid ObjectId - 24 characters)
            responses:
                204:
                    description: No Content - protocol successfully deleted
                400:
                    description: Bad Request - invalid ID
                    content:
                        application/json:
                            example:
                                message: "Id must be a valid MongooseDB ObjectId!"
                404:
                    description: Not Found - note does not exist
                    content:
                        application/json:
                            example:
                                message: "Protocol not found!"
                500:
                    description: Internal Server Error - server error
                    content:
                        application/json:
                            example:
                                message: "Internal server error..."

components:
    schemas:
        SimpleProtocol:
            type: object
            properties:
                _id:
                    type: string
                    example: "6833318fd414ea08fac843ec"
                title:
                    type: string
                    example: "Protocol title"
                date:
                    type: string
                    example: "2025/01/01"
                fileUrl:
                    type: string
                    example: "https://example.pdf"
                createdAt:
                    type: string
                    format: date-time
                    example: "2025-05-25T15:04:47.780Z"

        GetAllProtocolsResponse:
            type: array
            items:
                $ref: "#/components/schemas/SimpleProtocol"

        CreateProtocolRequest:
            type: object
            required:
                - title
                - date
                - fileUrl
            properties:
                title:
                    type: string
                    example: "New protocol Title"
                date:
                    type: string
                    example: "2025/01/01"
                fileUrl:
                    type: string
                    example: "https://example.pdf"

        EditProtocolRequest:
            type: object
            required:
                - title
                - date
                - fileUrl
            properties:
                title:
                    type: string
                    example: "Edited Title"
                date:
                    type: string
                    example: "2025/01/02"
                fileUrl:
                    type: string
                    example: "https://editedExample.pdf"
