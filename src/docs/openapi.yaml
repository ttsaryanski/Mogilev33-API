openapi: 3.0.0
info:
    title: Mogilev33 REST API
    version: 1.0.0
    description: |
        This API is rate limited:
        - Global: max 100 requests per 15 minutes per IP
        - Endpoint /auth/login: max 5 requests per 15 minutes per IP

servers:
    - url: http://localhost:3000/api

paths:
    /auth/register:
        post:
            summary: User registration
            tags: [Auth]
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/AuthLoginRegisterRequest"
            responses:
                201:
                    description: Register is successful
                    headers:
                        Set-Cookie:
                            description: Set JWT in cookie
                            schema:
                                type: string
                                example: refreshToken=eyJhbGciOiJIUzI1...; Path=/; HttpOnly; Secure; SameSite=none
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/AuthLoginRegisterResponse"
                400:
                    description: Bad Request - Invalid data
                    content:
                        application/json:
                            examples:
                                invalidEmail:
                                    summary: Invalid email
                                    value:
                                        message: "Invalid email format!"
                                invalidPassword:
                                    summary: Invalid password
                                    value:
                                        message: "Password must be at least 6 characters!"
                409:
                    description: Conflict - Email already registered
                    content:
                        application/json:
                            example:
                                message: "This email already registered!"
                429:
                    $ref: "#/components/responses/TooManyRequests"
                500:
                    description: Internal Server Error - Server error
                    content:
                        application/json:
                            example:
                                message: "Internal server error..."

    /auth/login:
        post:
            summary: User login
            tags: [Auth]
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/AuthLoginRegisterRequest"
            responses:
                201:
                    description: Login is successful
                    headers:
                        Set-Cookie:
                            description: Set JWT in cookie
                            schema:
                                type: string
                                example: refreshToken=eyJhbGciOiJIUzI1...; Path=/; HttpOnly; Secure; SameSite=none
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/AuthLoginRegisterResponse"
                400:
                    description: Bad Request - Invalid data
                    content:
                        application/json:
                            examples:
                                invalidEmail:
                                    summary: Invalid email
                                    value:
                                        message: "Invalid email format!"
                                invalidPassword:
                                    summary: Invalid password
                                    value:
                                        message: "Password must be at least 6 characters!"
                401:
                    description: Unauthorized - Invalid password
                    content:
                        application/json:
                            example:
                                message: "Password does not match!"
                404:
                    description: Not Found - User does not exist
                    content:
                        application/json:
                            example:
                                message: "User does not exist!"
                429:
                    description: Too Many Requests - Too many login attempts
                    content:
                        application/json:
                            example:
                                message: "Too many login attempts. Please try again in 15 minutes."
                500:
                    description: Internal Server Error - Server error
                    content:
                        application/json:
                            example:
                                message: "Internal server error..."

    /auth/logout:
        post:
            summary: User logout
            tags: [Auth]
            security:
                - Mogilev33: []
            responses:
                200:
                    description: Logout is successful
                    headers:
                        Set-Cookie:
                            description: Clear JWT cookie
                            schema:
                                type: string
                                example: refreshToken=; Path=/; HttpOnly; Secure; SameSite=None; Max-Age=0
                    content:
                        application/json:
                            example:
                                message: "Logged out successfully"
                401:
                    description: Unauthorized - Missing token
                    content:
                        application/json:
                            example:
                                message: "Missing token!"
                403:
                    description: Forbidden - Access denied
                    content:
                        application/json:
                            example:
                                message: "Invalid token!"
                429:
                    $ref: "#/components/responses/TooManyRequests"
                500:
                    description: Internal Server Error - Server error
                    content:
                        application/json:
                            example:
                                message: "Internal server error..."

    /auth/profile:
        get:
            summary: Gets user profile
            tags: [Auth]
            security:
                - Mogilev33: []
            responses:
                200:
                    description: OK - User profile retrieved successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/SimpleUser"
                401:
                    description: Unauthorized - Missing token
                    content:
                        application/json:
                            example:
                                message: "Missing token!"
                403:
                    description: Forbidden - Access denied
                    content:
                        application/json:
                            example:
                                message: "Invalid token!"
                404:
                    description: Not Found - User does not exist
                    content:
                        application/json:
                            example:
                                message: "There is no user with this id!"
                429:
                    $ref: "#/components/responses/TooManyRequests"
                500:
                    description: Internal Server Error - Server error
                    content:
                        application/json:
                            example:
                                message: "Internal server error..."

    /auth/refresh:
        post:
            summary: Refresh access token
            description: Generate and return a new access token using the refresh token stored in cookies.
            tags: [Auth]
            security:
                - Mogilev33: []
            responses:
                200:
                    description: New access token issued
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/AuthLoginRegisterResponse"
                401:
                    description: Unauthorized - Missing token
                    content:
                        application/json:
                            example:
                                message: "Missing token!"
                403:
                    description: Forbidden - Access denied
                    content:
                        application/json:
                            example:
                                message: "Invalid token!"
                429:
                    $ref: "#/components/responses/TooManyRequests"
                500:
                    description: Internal Server Error - Server error
                    content:
                        application/json:
                            example:
                                message: "Internal server error..."

    /protocols:
        get:
            summary: Gets all protocols
            tags: [Protocols]
            responses:
                200:
                    description: Ok - Successfully retrieved protocols
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/GetAllProtocolsAndInvitationsResponse"
                429:
                    $ref: "#/components/responses/TooManyRequests"
                500:
                    description: Internal Server Error - Server error
                    content:
                        application/json:
                            example:
                                message: "Internal server error..."
        post:
            summary: Creates a new protocol
            tags: [Protocols]
            security:
                - Mogilev33: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/CreateProtocolAndInviteRequest"
            responses:
                201:
                    description: Created - protocol successfully created
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/SimpleProtocolAndInvite"
                400:
                    description: Bad Request - invalid data
                    content:
                        application/json:
                            examples:
                                invalidTitle:
                                    summary: Invalid title
                                    value:
                                        message: "Protocol title should be at least 3 characters long!"
                                invalidDate:
                                    summary: Invalid date
                                    value:
                                        message: "Invalid date format. Expected YYYY/MM/DD (e.g. 2025/03/28)!"
                                invalidFileUrl:
                                    summary: Invalid fileUrl
                                    value:
                                        message: "Invalid file URL!"
                401:
                    description: Unauthorized - Missing token
                    content:
                        application/json:
                            example:
                                message: "Missing token!"
                403:
                    description: Forbidden - Access denied
                    content:
                        application/json:
                            examples:
                                InvalidToken:
                                    summary: Invalid refresh token
                                    value:
                                        message: "Invalid token!"
                                AdminAccess:
                                    summary: Admin access required
                                    value:
                                        message: "Admin access required!"
                429:
                    $ref: "#/components/responses/TooManyRequests"
                500:
                    description: Internal Server Error - server error
                    content:
                        application/json:
                            example:
                                message: "Internal server error..."

    /protocols/{protocolId}:
        get:
            summary: Gets a protocol by ID
            tags: [Protocols]
            security:
                - Mogilev33: []
            parameters:
                - in: path
                  name: protocolId
                  required: true
                  schema:
                      type: string
                  description: ID of the protocol (valid ObjectId - 24 characters)
            responses:
                200:
                    description: Ok - Successfully retrieved protocol
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/SimpleProtocolAndInvite"
                400:
                    description: Bad Request - invalid ID
                    content:
                        application/json:
                            example:
                                message: "Id must be a valid MongooseDB ObjectId!"
                401:
                    description: Unauthorized - Missing token
                    content:
                        application/json:
                            example:
                                message: "Missing token!"
                403:
                    description: Forbidden - Access denied
                    content:
                        application/json:
                            examples:
                                InvalidToken:
                                    summary: Invalid refresh token
                                    value:
                                        message: "Invalid token!"
                                AdminAccess:
                                    summary: Admin access required
                                    value:
                                        message: "Admin access required!"
                404:
                    description: Not Found - protocol does not exist
                    content:
                        application/json:
                            example:
                                message: "Protocol not found!"
                429:
                    $ref: "#/components/responses/TooManyRequests"
                500:
                    description: Internal Server Error - server error
                    content:
                        application/json:
                            example:
                                message: "Internal server error..."
        put:
            summary: Updates a protocol by ID
            tags: [Protocols]
            security:
                - Mogilev33: []
            parameters:
                - in: path
                  name: protocolId
                  required: true
                  schema:
                      type: string
                  description: ID of the protocol (valid ObjectId - 24 characters)
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/EditProtocolAndInviteRequest"
            responses:
                200:
                    description: Ok - protocol successfully updated
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/SimpleProtocolAndInvite"
                400:
                    description: Bad Request - invalid data
                    content:
                        application/json:
                            examples:
                                invalidId:
                                    summary: Invalid ID
                                    value:
                                        message: "Id must be a valid MongooseDB ObjectId!"
                                invalidTitle:
                                    summary: Invalid title
                                    value:
                                        message: "Protocol title should be at least 3 characters long!"
                                invalidDate:
                                    summary: Invalid date
                                    value:
                                        message: "Invalid date format. Expected YYYY/MM/DD (e.g. 2025/03/28)!"
                                invalidFileUrl:
                                    summary: Invalid fileUrl
                                    value:
                                        message: "Invalid file URL!"
                401:
                    description: Unauthorized - Missing token
                    content:
                        application/json:
                            example:
                                message: "Missing token!"
                403:
                    description: Forbidden - Access denied
                    content:
                        application/json:
                            examples:
                                InvalidToken:
                                    summary: Invalid refresh token
                                    value:
                                        message: "Invalid token!"
                                AdminAccess:
                                    summary: Admin access required
                                    value:
                                        message: "Admin access required!"
                404:
                    description: Not Found - protocol does not exist
                    content:
                        application/json:
                            example:
                                message: "Protocol not found!"
                429:
                    $ref: "#/components/responses/TooManyRequests"
                500:
                    description: Internal Server Error - server error
                    content:
                        application/json:
                            example:
                                message: "Internal server error..."
        delete:
            summary: Deletes a protocol by ID
            tags: [Protocols]
            security:
                - Mogilev33: []
            parameters:
                - in: path
                  name: protocolId
                  required: true
                  schema:
                      type: string
                  description: ID of the protocol (valid ObjectId - 24 characters)
            responses:
                204:
                    description: No Content - protocol successfully deleted
                400:
                    description: Bad Request - invalid ID
                    content:
                        application/json:
                            example:
                                message: "Id must be a valid MongooseDB ObjectId!"
                401:
                    description: Unauthorized - Missing token
                    content:
                        application/json:
                            example:
                                message: "Missing token!"
                403:
                    description: Forbidden - Access denied
                    content:
                        application/json:
                            examples:
                                InvalidToken:
                                    summary: Invalid refresh token
                                    value:
                                        message: "Invalid token!"
                                AdminAccess:
                                    summary: Admin access required
                                    value:
                                        message: "Admin access required!"
                404:
                    description: Not Found - protocol does not exist
                    content:
                        application/json:
                            example:
                                message: "Protocol not found!"
                429:
                    $ref: "#/components/responses/TooManyRequests"
                500:
                    description: Internal Server Error - server error
                    content:
                        application/json:
                            example:
                                message: "Internal server error..."

    /protocols/upload:
        post:
            summary: Creates a new protocol with file upload to GCS
            tags: [Protocols]
            security:
                - Mogilev33: []
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            $ref: "#/components/schemas/CreateProtocolAndInviteWithUploadRequest"
            responses:
                201:
                    description: Created - protocol successfully created
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/SimpleProtocolAndInvite"
                400:
                    description: Bad Request - invalid data
                    content:
                        application/json:
                            examples:
                                invalidTitle:
                                    summary: Invalid title
                                    value:
                                        message: "Protocol title should be at least 3 characters long!"
                                invalidDate:
                                    summary: Invalid date
                                    value:
                                        message: "Invalid date format. Expected YYYY/MM/DD (e.g. 2025/03/28)!"
                                invalidFile:
                                    summary: Invalid file - no file provided
                                    value:
                                        message: "No file provided!"
                401:
                    description: Unauthorized - Missing token
                    content:
                        application/json:
                            example:
                                message: "Missing token!"
                403:
                    description: Forbidden - Access denied
                    content:
                        application/json:
                            examples:
                                InvalidToken:
                                    summary: Invalid refresh token
                                    value:
                                        message: "Invalid token!"
                                AdminAccess:
                                    summary: Admin access required
                                    value:
                                        message: "Admin access required!"
                413:
                    description: Payload Too Large - File too large
                    content:
                        application/json:
                            example:
                                message: "File size should not exceed 5MB!"
                429:
                    $ref: "#/components/responses/TooManyRequests"
                500:
                    description: Internal Server Error - Server error
                    content:
                        application/json:
                            example:
                                message: "Internal server error..."

    /protocols/upload/{protocolId}:
        put:
            summary: Updates a protocol by ID with file upload to GCS
            tags: [Protocols]
            security:
                - Mogilev33: []
            parameters:
                - in: path
                  name: protocolId
                  required: true
                  schema:
                      type: string
                  description: ID of the protocol (valid ObjectId - 24 characters)
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            $ref: "#/components/schemas/EditProtocolAndInviteWithUploadRequest"
            responses:
                200:
                    description: Ok - protocol successfully updated
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/SimpleProtocolAndInvite"
                400:
                    description: Bad Request - invalid data
                    content:
                        application/json:
                            examples:
                                invalidTitle:
                                    summary: Invalid title
                                    value:
                                        message: "Protocol title should be at least 3 characters long!"
                                invalidDate:
                                    summary: Invalid date
                                    value:
                                        message: "Invalid date format. Expected YYYY/MM/DD (e.g. 2025/03/28)!"
                                invalidFile:
                                    summary: Invalid file - no file provided
                                    value:
                                        message: "No file provided!"
                401:
                    description: Unauthorized - Missing token
                    content:
                        application/json:
                            example:
                                message: "Missing token!"
                403:
                    description: Forbidden - Access denied
                    content:
                        application/json:
                            examples:
                                InvalidToken:
                                    summary: Invalid refresh token
                                    value:
                                        message: "Invalid token!"
                                AdminAccess:
                                    summary: Admin access required
                                    value:
                                        message: "Admin access required!"
                404:
                    description: Not Found - protocol does not exist
                    content:
                        application/json:
                            example:
                                message: "Protocol not found!"
                413:
                    description: Payload Too Large - File too large
                    content:
                        application/json:
                            example:
                                message: "File size should not exceed 5MB!"
                429:
                    $ref: "#/components/responses/TooManyRequests"
                500:
                    description: Internal Server Error - server error
                    content:
                        application/json:
                            example:
                                message: "Internal server error..."

    /invitations:
        get:
            summary: Gets all invitations
            tags: [Invitations]
            responses:
                200:
                    description: Ok - Successfully retrieved invitations
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/GetAllProtocolsAndInvitationsResponse"
                429:
                    $ref: "#/components/responses/TooManyRequests"
                500:
                    description: Internal Server Error - Server error
                    content:
                        application/json:
                            example:
                                message: "Internal server error..."
        post:
            summary: Creates a new invite
            tags: [Invitations]
            security:
                - Mogilev33: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/CreateProtocolAndInviteRequest"
            responses:
                201:
                    description: Created - invite successfully created
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/SimpleProtocolAndInvite"
                400:
                    description: Bad Request - invalid data
                    content:
                        application/json:
                            examples:
                                invalidTitle:
                                    summary: Invalid title
                                    value:
                                        message: "Invite title should be at least 3 characters long!"
                                invalidDate:
                                    summary: Invalid date
                                    value:
                                        message: "Invalid date format. Expected YYYY/MM/DD (e.g. 2025/03/28)!"
                                invalidFileUrl:
                                    summary: Invalid fileUrl
                                    value:
                                        message: "Invalid file URL!"
                401:
                    description: Unauthorized - Missing token
                    content:
                        application/json:
                            example:
                                message: "Missing token!"
                403:
                    description: Forbidden - Access denied
                    content:
                        application/json:
                            examples:
                                InvalidToken:
                                    summary: Invalid refresh token
                                    value:
                                        message: "Invalid token!"
                                AdminAccess:
                                    summary: Admin access required
                                    value:
                                        message: "Admin access required!"
                429:
                    $ref: "#/components/responses/TooManyRequests"
                500:
                    description: Internal Server Error - server error
                    content:
                        application/json:
                            example:
                                message: "Internal server error..."

    /invitations/{inviteId}:
        get:
            summary: Gets a invite by ID
            tags: [Invitations]
            security:
                - Mogilev33: []
            parameters:
                - in: path
                  name: inviteId
                  required: true
                  schema:
                      type: string
                  description: ID of the invite (valid ObjectId - 24 characters)
            responses:
                200:
                    description: Ok - Successfully retrieved invite
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/SimpleProtocolAndInvite"
                400:
                    description: Bad Request - invalid ID
                    content:
                        application/json:
                            example:
                                message: "Id must be a valid MongooseDB ObjectId!"
                401:
                    description: Unauthorized - Missing token
                    content:
                        application/json:
                            example:
                                message: "Missing token!"
                403:
                    description: Forbidden - Access denied
                    content:
                        application/json:
                            examples:
                                InvalidToken:
                                    summary: Invalid refresh token
                                    value:
                                        message: "Invalid token!"
                                AdminAccess:
                                    summary: Admin access required
                                    value:
                                        message: "Admin access required!"
                404:
                    description: Not Found - invite does not exist
                    content:
                        application/json:
                            example:
                                message: "Invite not found!"
                429:
                    $ref: "#/components/responses/TooManyRequests"
                500:
                    description: Internal Server Error - server error
                    content:
                        application/json:
                            example:
                                message: "Internal server error..."
        put:
            summary: Updates a invite by ID
            tags: [Invitations]
            security:
                - Mogilev33: []
            parameters:
                - in: path
                  name: inviteId
                  required: true
                  schema:
                      type: string
                  description: ID of the invite (valid ObjectId - 24 characters)
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/EditProtocolAndInviteRequest"
            responses:
                200:
                    description: Ok - invite successfully updated
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/SimpleProtocolAndInvite"
                400:
                    description: Bad Request - invalid data
                    content:
                        application/json:
                            examples:
                                invalidId:
                                    summary: Invalid ID
                                    value:
                                        message: "Id must be a valid MongooseDB ObjectId!"
                                invalidTitle:
                                    summary: Invalid title
                                    value:
                                        message: "Invite title should be at least 3 characters long!"
                                invalidDate:
                                    summary: Invalid date
                                    value:
                                        message: "Invalid date format. Expected YYYY/MM/DD (e.g. 2025/03/28)!"
                                invalidFileUrl:
                                    summary: Invalid fileUrl
                                    value:
                                        message: "Invalid file URL!"
                401:
                    description: Unauthorized - Missing token
                    content:
                        application/json:
                            example:
                                message: "Missing token!"
                403:
                    description: Forbidden - Access denied
                    content:
                        application/json:
                            examples:
                                InvalidToken:
                                    summary: Invalid refresh token
                                    value:
                                        message: "Invalid token!"
                                AdminAccess:
                                    summary: Admin access required
                                    value:
                                        message: "Admin access required!"
                404:
                    description: Not Found - invite does not exist
                    content:
                        application/json:
                            example:
                                message: "Invite not found!"
                429:
                    $ref: "#/components/responses/TooManyRequests"
                500:
                    description: Internal Server Error - server error
                    content:
                        application/json:
                            example:
                                message: "Internal server error..."
        delete:
            summary: Deletes a invite by ID
            tags: [Invitations]
            security:
                - Mogilev33: []
            parameters:
                - in: path
                  name: inviteId
                  required: true
                  schema:
                      type: string
                  description: ID of the invite (valid ObjectId - 24 characters)
            responses:
                204:
                    description: No Content - invite successfully deleted
                400:
                    description: Bad Request - invalid ID
                    content:
                        application/json:
                            example:
                                message: "Id must be a valid MongooseDB ObjectId!"
                401:
                    description: Unauthorized - Missing token
                    content:
                        application/json:
                            example:
                                message: "Missing token!"
                403:
                    description: Forbidden - Access denied
                    content:
                        application/json:
                            examples:
                                InvalidToken:
                                    summary: Invalid refresh token
                                    value:
                                        message: "Invalid token!"
                                AdminAccess:
                                    summary: Admin access required
                                    value:
                                        message: "Admin access required!"
                404:
                    description: Not Found - invite does not exist
                    content:
                        application/json:
                            example:
                                message: "Invite not found!"
                429:
                    $ref: "#/components/responses/TooManyRequests"
                500:
                    description: Internal Server Error - server error
                    content:
                        application/json:
                            example:
                                message: "Internal server error..."

    /invitations/upload:
        post:
            summary: Creates a new invite with file upload to GCS
            tags: [Invitations]
            security:
                - Mogilev33: []
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            $ref: "#/components/schemas/CreateProtocolAndInviteWithUploadRequest"
            responses:
                201:
                    description: Created - invite successfully created
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/SimpleProtocolAndInvite"
                400:
                    description: Bad Request - invalid data
                    content:
                        application/json:
                            examples:
                                invalidTitle:
                                    summary: Invalid title
                                    value:
                                        message: "Invite title should be at least 3 characters long!"
                                invalidDate:
                                    summary: Invalid date
                                    value:
                                        message: "Invalid date format. Expected YYYY/MM/DD (e.g. 2025/03/28)!"
                                invalidFile:
                                    summary: Invalid file - no file provided
                                    value:
                                        message: "No file provided!"
                401:
                    description: Unauthorized - Missing token
                    content:
                        application/json:
                            example:
                                message: "Missing token!"
                403:
                    description: Forbidden - Access denied
                    content:
                        application/json:
                            examples:
                                InvalidToken:
                                    summary: Invalid refresh token
                                    value:
                                        message: "Invalid token!"
                                AdminAccess:
                                    summary: Admin access required
                                    value:
                                        message: "Admin access required!"
                413:
                    description: Payload Too Large - File too large
                    content:
                        application/json:
                            example:
                                message: "File size should not exceed 5MB!"
                429:
                    $ref: "#/components/responses/TooManyRequests"
                500:
                    description: Internal Server Error - Server error
                    content:
                        application/json:
                            example:
                                message: "Internal server error..."

    /invitations/upload/{inviteId}:
        put:
            summary: Updates a invite by ID with file upload to GCS
            tags: [Invitations]
            security:
                - Mogilev33: []
            parameters:
                - in: path
                  name: inviteId
                  required: true
                  schema:
                      type: string
                  description: ID of the invite (valid ObjectId - 24 characters)
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            $ref: "#/components/schemas/EditProtocolAndInviteWithUploadRequest"
            responses:
                200:
                    description: Ok - invite successfully updated
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/SimpleProtocolAndInvite"
                400:
                    description: Bad Request - invalid data
                    content:
                        application/json:
                            examples:
                                invalidTitle:
                                    summary: Invalid title
                                    value:
                                        message: "Invite title should be at least 3 characters long!"
                                invalidDate:
                                    summary: Invalid date
                                    value:
                                        message: "Invalid date format. Expected YYYY/MM/DD (e.g. 2025/03/28)!"
                                invalidFile:
                                    summary: Invalid file - no file provided
                                    value:
                                        message: "No file provided!"
                401:
                    description: Unauthorized - Missing token
                    content:
                        application/json:
                            example:
                                message: "Missing token!"
                403:
                    description: Forbidden - Access denied
                    content:
                        application/json:
                            examples:
                                InvalidToken:
                                    summary: Invalid refresh token
                                    value:
                                        message: "Invalid token!"
                                AdminAccess:
                                    summary: Admin access required
                                    value:
                                        message: "Admin access required!"
                404:
                    description: Not Found - invite does not exist
                    content:
                        application/json:
                            example:
                                message: "Invite not found!"
                413:
                    description: Payload Too Large - File too large
                    content:
                        application/json:
                            example:
                                message: "File size should not exceed 5MB!"
                429:
                    $ref: "#/components/responses/TooManyRequests"
                500:
                    description: Internal Server Error - server error
                    content:
                        application/json:
                            example:
                                message: "Internal server error..."

    /offers:
        get:
            summary: Gets all offers
            tags: [Offers]
            responses:
                200:
                    description: Ok - Successfully retrieved offers
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/GetAllOffers"
                429:
                    $ref: "#/components/responses/TooManyRequests"
                500:
                    description: Internal Server Error - Server error
                    content:
                        application/json:
                            example:
                                message: "Internal server error..."
        post:
            summary: Creates a new offer
            tags: [Offers]
            security:
                - Mogilev33: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/CreateOfferRequest"
            responses:
                201:
                    description: Created - offer successfully created
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/SimpleOffer"
                400:
                    description: Bad Request - invalid data
                    content:
                        application/json:
                            examples:
                                invalidTitle:
                                    summary: Invalid title
                                    value:
                                        message: "Offer title should be at least 3 characters long!"
                                invalidCompany:
                                    summary: Invalid company name
                                    value:
                                        message: "Company name should be at least 2 characters long!"
                                invalidPrice:
                                    summary: Invalid price
                                    value:
                                        message: "Price must be a positive number!"
                                invalidFileUrl:
                                    summary: Invalid fileUrl
                                    value:
                                        message: "Invalid file URL!"
                401:
                    description: Unauthorized - Missing token
                    content:
                        application/json:
                            example:
                                message: "Missing token!"
                403:
                    description: Forbidden - Access denied
                    content:
                        application/json:
                            examples:
                                InvalidToken:
                                    summary: Invalid refresh token
                                    value:
                                        message: "Invalid token!"
                                AdminAccess:
                                    summary: Admin access required
                                    value:
                                        message: "Admin access required!"
                429:
                    $ref: "#/components/responses/TooManyRequests"
                500:
                    description: Internal Server Error - server error
                    content:
                        application/json:
                            example:
                                message: "Internal server error..."

    /offers/{offerId}:
        get:
            summary: Gets a offer by ID
            tags: [Offers]
            security:
                - Mogilev33: []
            parameters:
                - in: path
                  name: offerId
                  required: true
                  schema:
                      type: string
                  description: ID of the offer (valid ObjectId - 24 characters)
            responses:
                200:
                    description: Ok - Successfully retrieved offer
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/SimpleOffer"
                400:
                    description: Bad Request - invalid ID
                    content:
                        application/json:
                            example:
                                message: "Id must be a valid MongooseDB ObjectId!"
                401:
                    description: Unauthorized - Missing token
                    content:
                        application/json:
                            example:
                                message: "Missing token!"
                403:
                    description: Forbidden - Access denied
                    content:
                        application/json:
                            examples:
                                InvalidToken:
                                    summary: Invalid refresh token
                                    value:
                                        message: "Invalid token!"
                                AdminAccess:
                                    summary: Admin access required
                                    value:
                                        message: "Admin access required!"
                404:
                    description: Not Found - offer does not exist
                    content:
                        application/json:
                            example:
                                message: "Offer not found!"
                429:
                    $ref: "#/components/responses/TooManyRequests"
                500:
                    description: Internal Server Error - server error
                    content:
                        application/json:
                            example:
                                message: "Internal server error..."
        put:
            summary: Updates a offer by ID
            tags: [Offers]
            security:
                - Mogilev33: []
            parameters:
                - in: path
                  name: offerId
                  required: true
                  schema:
                      type: string
                  description: ID of the offer (valid ObjectId - 24 characters)
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/EditOfferRequest"
            responses:
                200:
                    description: Ok - offer successfully updated
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/SimpleOffer"
                400:
                    description: Bad Request - invalid data
                    content:
                        application/json:
                            examples:
                                invalidId:
                                    summary: Invalid ID
                                    value:
                                        message: "Id must be a valid MongooseDB ObjectId!"
                                invalidTitle:
                                    summary: Invalid title
                                    value:
                                        message: "Offer title should be at least 3 characters long!"
                                invalidCompany:
                                    summary: Invalid company name
                                    value:
                                        message: "Company name should be at least 2 characters long!"
                                invalidPrice:
                                    summary: Invalid price
                                    value:
                                        message: "Price must be a positive number!"
                                invalidFileUrl:
                                    summary: Invalid fileUrl
                                    value:
                                        message: "Invalid file URL!"
                401:
                    description: Unauthorized - Missing token
                    content:
                        application/json:
                            example:
                                message: "Missing token!"
                403:
                    description: Forbidden - Access denied
                    content:
                        application/json:
                            examples:
                                InvalidToken:
                                    summary: Invalid refresh token
                                    value:
                                        message: "Invalid token!"
                                AdminAccess:
                                    summary: Admin access required
                                    value:
                                        message: "Admin access required!"
                404:
                    description: Not Found - offer does not exist
                    content:
                        application/json:
                            example:
                                message: "Offer not found!"
                429:
                    $ref: "#/components/responses/TooManyRequests"
                500:
                    description: Internal Server Error - server error
                    content:
                        application/json:
                            example:
                                message: "Internal server error..."
        delete:
            summary: Deletes a offer by ID
            tags: [Offers]
            security:
                - Mogilev33: []
            parameters:
                - in: path
                  name: offerId
                  required: true
                  schema:
                      type: string
                  description: ID of the offer (valid ObjectId - 24 characters)
            responses:
                204:
                    description: No Content - offer successfully deleted
                400:
                    description: Bad Request - invalid ID
                    content:
                        application/json:
                            example:
                                message: "Id must be a valid MongooseDB ObjectId!"
                401:
                    description: Unauthorized - Missing token
                    content:
                        application/json:
                            example:
                                message: "Missing token!"
                403:
                    description: Forbidden - Access denied
                    content:
                        application/json:
                            examples:
                                InvalidToken:
                                    summary: Invalid refresh token
                                    value:
                                        message: "Invalid token!"
                                AdminAccess:
                                    summary: Admin access required
                                    value:
                                        message: "Admin access required!"
                404:
                    description: Not Found - offer does not exist
                    content:
                        application/json:
                            example:
                                message: "Offer not found!"
                429:
                    $ref: "#/components/responses/TooManyRequests"
                500:
                    description: Internal Server Error - server error
                    content:
                        application/json:
                            example:
                                message: "Internal server error..."

    /offers/upload:
        post:
            summary: Creates a new offer with file upload to GCS
            tags: [Offers]
            security:
                - Mogilev33: []
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            $ref: "#/components/schemas/CreateOfferWithUploadRequest"
            responses:
                201:
                    description: Created - offer successfully created
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/SimpleOffer"
                400:
                    description: Bad Request - invalid data
                    content:
                        application/json:
                            examples:
                                invalidTitle:
                                    summary: Invalid title
                                    value:
                                        message: "Offer title should be at least 3 characters long!"
                                invalidCompany:
                                    summary: Invalid company name
                                    value:
                                        message: "Company name should be at least 2 characters long!"
                                invalidPrice:
                                    summary: Invalid price
                                    value:
                                        message: "Price must be a positive number!"
                                invalidFile:
                                    summary: Invalid file - no file provided
                                    value:
                                        message: "No file provided!"
                401:
                    description: Unauthorized - Missing token
                    content:
                        application/json:
                            example:
                                message: "Missing token!"
                403:
                    description: Forbidden - Access denied
                    content:
                        application/json:
                            examples:
                                InvalidToken:
                                    summary: Invalid refresh token
                                    value:
                                        message: "Invalid token!"
                                AdminAccess:
                                    summary: Admin access required
                                    value:
                                        message: "Admin access required!"
                413:
                    description: Payload Too Large - File too large
                    content:
                        application/json:
                            example:
                                message: "File size should not exceed 5MB!"
                429:
                    $ref: "#/components/responses/TooManyRequests"
                500:
                    description: Internal Server Error - Server error
                    content:
                        application/json:
                            example:
                                message: "Internal server error..."

    /offers/upload/{offerlId}:
        put:
            summary: Updates a offer by ID with file upload to GCS
            tags: [Offers]
            security:
                - Mogilev33: []
            parameters:
                - in: path
                  name: offerId
                  required: true
                  schema:
                      type: string
                  description: ID of the offer (valid ObjectId - 24 characters)
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            $ref: "#/components/schemas/EditOfferWithUploadRequest"
            responses:
                200:
                    description: Ok - offer successfully updated
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/SimpleOffer"
                400:
                    description: Bad Request - invalid data
                    content:
                        application/json:
                            examples:
                                invalidTitle:
                                    summary: Invalid title
                                    value:
                                        message: "Offer title should be at least 3 characters long!"
                                invalidCompany:
                                    summary: Invalid company name
                                    value:
                                        message: "Company name should be at least 2 characters long!"
                                invalidPrice:
                                    summary: Invalid price
                                    value:
                                        message: "Price must be a positive number!"
                                invalidFile:
                                    summary: Invalid file - no file provided
                                    value:
                                        message: "No file provided!"
                401:
                    description: Unauthorized - Missing token
                    content:
                        application/json:
                            example:
                                message: "Missing token!"
                403:
                    description: Forbidden - Access denied
                    content:
                        application/json:
                            examples:
                                InvalidToken:
                                    summary: Invalid refresh token
                                    value:
                                        message: "Invalid token!"
                                AdminAccess:
                                    summary: Admin access required
                                    value:
                                        message: "Admin access required!"
                404:
                    description: Not Found - offer does not exist
                    content:
                        application/json:
                            example:
                                message: "Offer not found!"
                413:
                    description: Payload Too Large - File too large
                    content:
                        application/json:
                            example:
                                message: "File size should not exceed 5MB!"
                429:
                    $ref: "#/components/responses/TooManyRequests"
                500:
                    description: Internal Server Error - server error
                    content:
                        application/json:
                            example:
                                message: "Internal server error..."

components:
    securitySchemes:
        Mogilev33:
            type: apiKey
            in: cookie
            name: refreshToken
    responses:
        TooManyRequests:
            description: Too many requests
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            error:
                                type: string
                                example: Too many requests from this IP, please try again later.
    schemas:
        AuthLoginRegisterRequest:
            type: object
            required:
                - email
                - password
            properties:
                email:
                    type: string
                    example: example@email.com
                password:
                    type: string
                    example: examplePassword

        AuthLoginRegisterResponse:
            type: object
            properties:
                accessToken:
                    type: string
                    example: eyJhbGciOiJIUzI1...

        SimpleUser:
            type: object
            properties:
                _id:
                    type: string
                    example: "6833318fd414ea08fac843ec"
                email:
                    type: string
                    example: "example@email.com"
                role:
                    type: string
                    example: "user"
                createdAt:
                    type: string
                    format: date-time
                    example: "2025-05-25T15:04:47.780Z"

        SimpleProtocolAndInvite:
            type: object
            properties:
                _id:
                    type: string
                    example: "6833318fd414ea08fac843ec"
                title:
                    type: string
                    example: "Title"
                date:
                    type: string
                    example: "2025/01/01"
                fileUrl:
                    type: string
                    example: "https://example.pdf"
                createdAt:
                    type: string
                    format: date-time
                    example: "2025-05-25T15:04:47.780Z"

        GetAllProtocolsAndInvitationsResponse:
            type: array
            items:
                $ref: "#/components/schemas/SimpleProtocolAndInvite"

        CreateProtocolAndInviteRequest:
            type: object
            required:
                - title
                - date
                - fileUrl
            properties:
                title:
                    type: string
                    example: "New title"
                date:
                    type: string
                    example: "2025/01/01"
                fileUrl:
                    type: string
                    example: "https://newExample.pdf"

        CreateProtocolAndInviteWithUploadRequest:
            type: object
            required:
                - title
                - date
                - file
            properties:
                title:
                    type: string
                    example: "New title"
                date:
                    type: string
                    example: "2025/01/01"
                file:
                    type: string
                    format: binary

        EditProtocolAndInviteWithUploadRequest:
            type: object
            required:
                - title
                - date
                - file
            properties:
                title:
                    type: string
                    example: "Edited title"
                date:
                    type: string
                    example: "2025/02/02"
                file:
                    type: string
                    format: binary

        EditProtocolAndInviteRequest:
            type: object
            required:
                - title
                - date
                - fileUrl
            properties:
                title:
                    type: string
                    example: "Edited title"
                date:
                    type: string
                    example: "2025/02/02"
                fileUrl:
                    type: string
                    example: "https://editedExample.pdf"

        SimpleOffer:
            type: object
            properties:
                _id:
                    type: string
                    example: "6833318fd414ea08fac843ec"
                title:
                    type: string
                    example: "Title"
                company:
                    type: string
                    example: "Company name"
                price:
                    type: number
                    example: 100
                fileUrl:
                    type: string
                    example: "https://example.pdf"
                createdAt:
                    type: string
                    format: date-time
                    example: "2025-05-25T15:04:47.780Z"

        GetAllOffers:
            type: array
            items:
                $ref: "#/components/schemas/SimpleOffer"

        CreateOfferRequest:
            type: object
            required:
                - title
                - company
                - price
                - fileUrl
            properties:
                title:
                    type: string
                    example: "New title"
                company:
                    type: string
                    example: "New company"
                price:
                    type: number
                    example: 111
                fileUrl:
                    type: string
                    example: "https://newExample.pdf"

        CreateOfferWithUploadRequest:
            type: object
            required:
                - title
                - company
                - price
                - file
            properties:
                title:
                    type: string
                    example: "New title"
                company:
                    type: string
                    example: "New company"
                price:
                    type: number
                    example: 111
                file:
                    type: string
                    format: binary

        EditOfferRequest:
            type: object
            required:
                - title
                - company
                - price
                - fileUrl
            properties:
                title:
                    type: string
                    example: "Edited title"
                company:
                    type: string
                    example: "Edited company"
                price:
                    type: number
                    example: 222
                fileUrl:
                    type: string
                    example: "https://editedExample.pdf"

        EditOfferWithUploadRequest:
            type: object
            required:
                - title
                - company
                - price
                - file
            properties:
                title:
                    type: string
                    example: "Edited title"
                company:
                    type: string
                    example: "Edited company"
                price:
                    type: number
                    example: 222
                file:
                    type: string
                    format: binary
